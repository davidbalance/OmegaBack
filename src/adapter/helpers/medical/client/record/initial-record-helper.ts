import { InitialRecord } from "@omega/medical/application/type/initial-record";
import { craftCurrentDisease, craftDiagnosticHeader, craftExtraActivity, craftFamilyHistory, CraftItemFunc, craftJobAccident, craftMedicalAndSurgicalHistory, craftMedicalConsultation, craftMedicalDiagnostic, craftMedicalFitnessForJob, craftOccupationalDisease, craftPhysicalRegionalExam, craftRecommendation, CraftRecordFunc, craftReviewOfOrgansAndSystem, craftSpecificAndGeneralResults, craftToxicHabitsAndLifeStyle, craftVitalSignsAndAnthropometry, flatRecord } from "../generic-record-helper";
import { formatDate } from "date-fns";
import { Cell, craftCell, craftHeader, craftRow, craftSpacing, craftSubtitle, craftTitle, emptyCell } from "../table.helper";

export const createInitialRecord: CraftRecordFunc<InitialRecord> = (record: InitialRecord, { fileNumber }) => flatRecord([
    craftHeader('DATOS DEL ESTABLECIMIENTO - EMPRESA Y USUARIO'),
    institutionLayout({ ...record, fileNumber }),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('MOTIVO DE CONSULTA'),
    craftMedicalConsultation(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('ANTECEDENTES PERSONALES'),
    craftMedicalAndSurgicalHistory(record),
    gynecologicalHistoryLayout(record.patientGender === 'male' ? undefined : record),
    maleReproducitveHistoryLayout(record.patientGender === 'female' ? undefined : record),
    craftToxicHabitsAndLifeStyle({
        tobacco: { ...record.toxicHabitTobacco },
        alcohol: { ...record.toxicHabitAlcohol },
        other: { ...record.toxicHabitOther },
    }, record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('ANTECEDENTES DE TRABAJO'),
    jobHistoryLayout(record),
    craftJobAccident(record),
    craftOccupationalDisease(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('ANTECEDENTES FAMILIARES (DETALLAR EL PARENTESCO)'),
    craftFamilyHistory(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('FACTORES DE RIESGOS DEL PUESTO DE TRABAJO ACTUAL'),
    jobRiskLayout(record),
    craftRow(emptyCell({ colSpan: 70 })),
    jobRiskPreventionLayout(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('ACTIVIDADES EXTRA LABORALES'),
    craftExtraActivity(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('ENFERMEDAD ACTUAL'),
    craftCurrentDisease(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('REVISIÓN ACTUAL DE ÓRGANOS Y SISTEMAS'),
    craftReviewOfOrgansAndSystem(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('CONSTANTES VITALES Y ANTROPOMETRÍA'),
    craftVitalSignsAndAnthropometry(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('EXAMEN FÍSICO REGIONAL'),
    craftPhysicalRegionalExam(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('RESULTADOS DE EXÁMENES GENERALES Y ESPECÍFICOS DE ACUERDO AL RIESGO Y PUESTO DE TRABAJO (IMAGEN, LABORATORIO Y OTROS)'),
    craftSpecificAndGeneralResults(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftDiagnosticHeader(),
    craftMedicalDiagnostic(record.diagnostics),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('APTITUD MÉDICA PARA EL TRABAJO'),
    craftMedicalFitnessForJob(record),
    craftRow(craftSpacing({ colSpan: 70 })),
    craftHeader('RECOMENDACIONES Y/O TRATAMIENTO'),
    craftRecommendation(record)
]);

const institutionLayout: CraftItemFunc<InitialRecord & {
    fileNumber: number;
}> = (record) => [
    craftRow(
        craftTitle('INSTITUCIÓN DEL SISTEMA O NOMBRE DE LA EMPRESA', { colSpan: 16 }),
        craftTitle('RUC', { colSpan: 10 }),
        craftTitle('CIU', { colSpan: 5 }),
        craftTitle('ESTABLECIMIENTO DE SALUD', { colSpan: 15 }),
        craftTitle('NÚMERO DE HISTORIA CLÍNICA', { colSpan: 14 }),
        craftTitle('NÚMERO DE ARCHIVO', { colSpan: 10 }),
    ),
    craftRow(
        craftCell(record.companyName, { colSpan: 16 }),
        craftCell(record.companyRUC, { colSpan: 10 }),
        craftCell(record.companyCIIU ?? '', { colSpan: 5 }),
        craftCell(record.institutionHealthFacility, { colSpan: 15 }),
        craftCell(record.patientDni, { colSpan: 14 }),
        craftCell(record.fileNumber.toString().padStart(12, '0'), { colSpan: 10 }),
    ),
    craftRow(
        craftTitle('PRIMER APELLIDO', { rowSpan: 2, colSpan: 10 }),
        craftTitle('SEGUNDO APELLIDO', { rowSpan: 2, colSpan: 10 }),
        craftTitle('PRIMER NOMBRE', { rowSpan: 2, colSpan: 10 }),
        craftTitle('SEGUNDO NOMBRE', { rowSpan: 2, colSpan: 10 }),
        craftTitle('SEXO', { rowSpan: 2, colSpan: 3 }),
        craftTitle('EDAD (AÑOS)', { rowSpan: 2, colSpan: 3 }),
        craftTitle('RELIGIÓN', { colSpan: 10 }),
        craftTitle('GRUPO SANGUÍNEO', { rowSpan: 2, colSpan: 6 }),
        craftTitle('LATERALIDAD', { rowSpan: 2, colSpan: 8 }),
    ),
    craftRow(
        craftCell('Católica', { orientation: 'vertical', style: 'itemTitle', colSpan: 2, height: 50, fontSize: 5 }),
        craftCell('Evangélica', { orientation: 'vertical', style: 'itemTitle', colSpan: 2, height: 50, fontSize: 5 }),
        craftCell('Testigos de Jehová', { orientation: 'vertical', style: 'itemTitle', colSpan: 2, height: 50, fontSize: 5 }),
        craftCell('Mormona', { orientation: 'vertical', style: 'itemTitle', colSpan: 2, height: 50, fontSize: 5 }),
        craftCell('Otras', { orientation: 'vertical', style: 'itemTitle', colSpan: 2, height: 50, fontSize: 5 }),
    ),
    craftRow(
        craftCell(record.patientLastName, { colSpan: 10 }),
        craftCell(record.patientSecondLastName, { colSpan: 10 }),
        craftCell(record.patientFirstName, { colSpan: 10 }),
        craftCell(record.patientMiddleName, { colSpan: 10 }),
        craftCell(record.patientGender === 'male' ? 'H' : 'M', { colSpan: 3, fontSize: 5 }),
        craftCell(record.patientAge.toString(), { colSpan: 3 }),
        craftCell(record.patientReligion === 'catholic' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientReligion === 'evangelical' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientReligion === 'jehovah\'s witnesses' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientReligion === 'mormon' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientReligion === 'other' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientBloodType, { colSpan: 6 }),
        craftCell(record.patientLaterality === 'right' ? 'DIESTRO' : 'ZURDO', { colSpan: 8 }),
    ),
    craftRow(
        craftTitle('ORIENTACIÓN SEXUAL', { colSpan: 10 }),
        craftTitle('IDENTIDAD DE GÉNERO', { colSpan: 10 }),
        craftTitle('DISCAPACIDAD', { colSpan: 13 }),
        craftTitle('FECHA DE INGRESO AL TRABAJO', { rowSpan: 2, colSpan: 5 }),
        craftTitle('PUESTO DE TRABAJO (CIUO)', { rowSpan: 2, colSpan: 5 }),
        craftTitle('ÁREA DE TRABAJO', { rowSpan: 2, colSpan: 6 }),
        craftTitle('ACTIVIDADES RELEVANTES AL PUESTO DE TRABAJO A OCUPAR', { rowSpan: 2, colSpan: 21 }),
    ),
    craftRow(
        craftCell('Lesbiana', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Gay', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Bisexual', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Heterosexual', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('No sabe / No responde', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Femenino', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Masculino', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Trans-femenino', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('Trans-masculino', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftCell('No sabe / No responde', { orientation: 'vertical', style: 'itemTitle', height: 50, fontSize: 5, colSpan: 2 }),
        craftTitle('SI', { colSpan: 2 }),
        craftTitle('NO', { colSpan: 2 }),
        craftTitle('TIPO', { colSpan: 6 }),
        craftTitle('%', { colSpan: 3 }),
    ),
    craftRow(
        craftCell(record.patientSexualOrientation === 'lesbian' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientSexualOrientation === 'gay' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientSexualOrientation === 'bisexual' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientSexualOrientation === 'heterosexual' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientSexualOrientation === 'unknown' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientGenderIdentity === 'female' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientGenderIdentity === 'male' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientGenderIdentity === 'trans-female' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientGenderIdentity === 'trans-male' ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientGenderIdentity === 'unknown' ? 'x' : '', { colSpan: 2 }),
        craftCell(!!record.patientDisabilityType ? 'x' : '', { colSpan: 2 }),
        craftCell(!record.patientDisabilityType ? 'x' : '', { colSpan: 2 }),
        craftCell(record.patientDisabilityType ?? '', { colSpan: 6 }),
        craftCell(record.patientDisabilityPercent?.toString() ?? '', { colSpan: 3 }),
        craftCell(formatDate(record.institutionJobStartDate, 'yyyy/MM/dd'), { colSpan: 5 }),
        craftCell(record.institutionJobPosition, { colSpan: 5 }),
        craftCell(record.institutionJobArea, { colSpan: 6 }),
        craftCell(record.institutionJobActivities, { colSpan: 21 }),
    ),
];

const gynecologicalHistoryLayout = (record: InitialRecord | undefined) => [
    craftRow(craftTitle('ANTECEDENTES GINECO OBSTÉTRICOS', { colSpan: 70 })),
    craftRow(
        craftSubtitle('MENARQUÍA', { rowSpan: 2, colSpan: 11 }),
        craftSubtitle('CICLOS', { rowSpan: 2, colSpan: 6 }),
        craftSubtitle('FECHA DE ULTIMA MENSTRUACIÓN', { rowSpan: 2, colSpan: 6 }),
        craftSubtitle('GESTAS', { rowSpan: 2, colSpan: 4 }),
        craftSubtitle('PARTOS', { rowSpan: 2, colSpan: 4 }),
        craftSubtitle('CESÁREAS', { rowSpan: 2, colSpan: 4 }),
        craftSubtitle('ABORTOS', { rowSpan: 2, colSpan: 4 }),
        craftSubtitle('HIJOS', { colSpan: 8 }),
        craftSubtitle('VIDA SEXUAL ACTIVA', { colSpan: 8 }),
        craftSubtitle('MÉTODO DE PLANIFICACIÓN FAMILIAR', { colSpan: 15 }),
    ),
    craftRow(
        craftSubtitle('VIVOS', { colSpan: 4 }),
        craftSubtitle('MUERTOS', { colSpan: 4 }),
        craftSubtitle('SI', { colSpan: 4 }),
        craftSubtitle('NO', { colSpan: 4 }),
        craftSubtitle('SI', { colSpan: 4 }),
        craftSubtitle('NO', { colSpan: 4 }),
        craftSubtitle('TIPO', { colSpan: 7 }),
    ),
    record ? craftRow(
        craftCell(record.gynecologicalMenarche, { colSpan: 11 }),
        craftCell(record.gynecologicalCycle, { colSpan: 6 }),
        craftCell(formatDate(record.gynecologicalLastMenstruationDate, 'yyyy/MM/dd'), { colSpan: 6 }),
        craftCell(record.gynecologicalDeeds.toString() ?? '', { colSpan: 4 }),
        craftCell(record.gynecologicalBirths.toString() ?? '', { colSpan: 4 }),
        craftCell(record.gynecologicalCesarean.toString() ?? '', { colSpan: 4 }),
        craftCell(record.gynecologicalAbortions.toString() ?? '', { colSpan: 4 }),
        craftCell(record.gynecologicalLivingChildren.toString() ?? '', { colSpan: 4 }),
        craftCell(record.gynecologicalDeadChildren.toString() ?? '', { colSpan: 4 }),
        craftCell(record.gynecologicalSexualLife ? 'x' : '', { colSpan: 4 }),
        craftCell(!record.gynecologicalSexualLife ? 'x' : '', { colSpan: 4 }),
        craftCell(!!record.gynecologicalFamilyPlanningType ? 'x' : '', { colSpan: 4 }),
        craftCell(!record.gynecologicalFamilyPlanningType ? 'x' : '', { colSpan: 4 }),
        craftCell(record.gynecologicalFamilyPlanningType ?? '', { colSpan: 7 })
    ) : craftRow(
        craftCell('', { colSpan: 11 }),
        craftCell('', { colSpan: 6 }),
        craftCell('', { colSpan: 6 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 4 }),
        craftCell('', { colSpan: 7 })
    ),
    craftRow(
        ...patientHistoryExamHeader({ exam: 12, done: 2, time: 8, result: 11 }),
        ...patientHistoryExamHeader({ exam: 12, done: 2, time: 8, result: 11 }),
    ),
    record
        ? craftRow(
            ...patientHistoryExamLayout({
                exam: 'PAPANICOLAOU',
                done: record.gynecologicalExamPapanicolau.done ?? false,
                time: record.gynecologicalExamPapanicolau.time ?? 0,
                result: record.gynecologicalExamPapanicolau.result ?? ''
            }, { exam: 12, done: 2, time: 8, result: 11 }),
            ...patientHistoryExamLayout({
                exam: 'ECO MAMARIO',
                done: record.gynecologicalExamBreastEcho.done ?? false,
                time: record.gynecologicalExamBreastEcho.time ?? 0,
                result: record.gynecologicalExamBreastEcho.result ?? ''
            }, { exam: 12, done: 2, time: 8, result: 11 }),
        )
        : craftRow(
            craftCell('PAPANICOLAOU', { colSpan: 12 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 8 }),
            craftCell('', { colSpan: 11 }),
            craftCell('ECO MAMARIO', { colSpan: 12 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 8 }),
            craftCell('', { colSpan: 11 }),
        ),
    record
        ? craftRow(
            ...patientHistoryExamLayout({
                exam: 'COLPOSCOPIA',
                done: record.gynecologicalExamColposcopy.done ?? false,
                time: record.gynecologicalExamColposcopy.time ?? 0,
                result: record.gynecologicalExamColposcopy.result ?? ''
            }, { exam: 12, done: 2, time: 8, result: 11 }),
            ...patientHistoryExamLayout({
                exam: 'MAMOGRAFÍA',
                done: record.gynecologicalExamMammography.done ?? false,
                time: record.gynecologicalExamMammography.time ?? 0,
                result: record.gynecologicalExamMammography.result ?? ''
            }, { exam: 12, done: 2, time: 8, result: 11 }),
        )
        : craftRow(
            craftCell('COLPOSCOPIA', { colSpan: 12 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 8 }),
            craftCell('', { colSpan: 11 }),
            craftCell('MAMOGRAFÍA', { colSpan: 12 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 8 }),
            craftCell('', { colSpan: 11 }),
        )
]

const maleReproducitveHistoryLayout = (record: InitialRecord | undefined) => [
    craftRow(craftTitle('ANTECEDENTES REPRODUCTIVOS MASCULINOS', { colSpan: 70 })),
    craftRow(
        ...patientHistoryExamHeader({ exam: 12, done: 2, time: 8, result: 11 }, 2),
        craftSubtitle('MÉTODO DE PLANIFICACIÓN FAMILIAR', { colSpan: 21 }),
        craftSubtitle('HIJOS', { colSpan: 14 }),
    ),
    craftRow(
        craftSubtitle('SI', { colSpan: 6 }),
        craftSubtitle('NO', { colSpan: 6 }),
        craftSubtitle('TIPO', { colSpan: 9 }),
        craftSubtitle('VIVOS', { colSpan: 7 }),
        craftSubtitle('MUERTOS', { colSpan: 7 }),
    ),
    record
        ? craftRow(
            ...patientHistoryExamLayout({
                exam: 'ANTÍGENO PROSTÁTICO',
                done: record.maleReproductiveExamProstateAntigen.done ?? false,
                time: record.maleReproductiveExamProstateAntigen.time ?? 0,
                result: record.maleReproductiveExamProstateAntigen.result ?? ''
            }, { exam: 12, done: 2, time: 8, result: 11 }),
            craftCell(!!record.maleReproductiveFamilyPlanningType ? 'x' : '', { rowSpan: 2, colSpan: 6 }),
            craftCell(!record.maleReproductiveFamilyPlanningType ? 'x' : '', { rowSpan: 2, colSpan: 6 }),
            craftCell(record.maleReproductiveFamilyPlanningType ?? '', { rowSpan: 2, colSpan: 9 }),
            craftCell(record.maleReproductiveLivingChildren.toString() ?? '', { rowSpan: 2, colSpan: 7 }),
            craftCell(record.maleReproductiveDeadChildren.toString() ?? '', { rowSpan: 2, colSpan: 7 }),
        )
        : craftRow(
            craftCell('ANTÍGENO PROSTÁTICO', { colSpan: 12 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 8 }),
            craftCell('', { colSpan: 11 }),
            craftCell('', { rowSpan: 2, colSpan: 6 }),
            craftCell('', { rowSpan: 2, colSpan: 6 }),
            craftCell('', { rowSpan: 2, colSpan: 9 }),
            craftCell('', { rowSpan: 2, colSpan: 7 }),
            craftCell('', { rowSpan: 2, colSpan: 7 }),
        ),
    record
        ? craftRow(
            ...patientHistoryExamLayout({
                exam: 'ECO PROSTÁTICO',
                done: record.maleReproductiveExamProstateEcho.done ?? false,
                time: record.maleReproductiveExamProstateEcho.time ?? 0,
                result: record.maleReproductiveExamProstateEcho.result ?? ''
            }, { exam: 12, done: 2, time: 8, result: 11 }),
        )
        : craftRow(
            craftCell('ECO PROSTÁTICO', { colSpan: 12 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 2 }),
            craftCell('', { colSpan: 8 }),
            craftCell('', { colSpan: 11 }),
        ),
];

const patientHistoryExamHeader = (span: { exam: number, done: number, time: number, result: number }, rowSpan: number = 1): Cell[] => [
    craftSubtitle('EXÁMENES REALIZADOS', { colSpan: span.exam, rowSpan }),
    craftSubtitle('SI', { colSpan: span.done, rowSpan }),
    craftSubtitle('NO', { colSpan: span.done, rowSpan }),
    craftSubtitle('TIEMPO', { colSpan: span.time, rowSpan }),
    craftSubtitle('RESULTADO', { colSpan: span.result, rowSpan }),
];

const patientHistoryExamLayout = (values: { exam: string, done: boolean, time: number, result: string }, span: { exam: number, done: number, time: number, result: number }) => [
    craftCell(values.exam, { colSpan: span.exam }),
    craftCell(values.done ? 'x' : '', { colSpan: span.done }),
    craftCell(!values.done ? 'x' : '', { colSpan: span.done }),
    craftCell(values.time.toString(), { colSpan: span.time }),
    craftCell(values.result, { colSpan: span.result }),
];

const jobHistoryLayout: CraftItemFunc<InitialRecord> = (record) => [
    craftRow(craftTitle('ANTECEDENTES DE EMPLEOS ANTERIORES', { colSpan: 70 })),
    craftRow(
        craftTitle('EMPRESA', { rowSpan: 2, colSpan: 12 }),
        craftTitle('PUESTO DE TRABAJO', { rowSpan: 2, colSpan: 10 }),
        craftTitle('ACTIVIDADES QUE DESEMPEÑABA', { rowSpan: 2, colSpan: 15 }),
        craftTitle('TIEMPO DE TRABAJO (meses)', { rowSpan: 2, colSpan: 6 }),
        craftTitle('RIESGO', { colSpan: 12 }),
        craftTitle('OBSERVACIONES', { rowSpan: 2, colSpan: 15 }),
    ),
    craftRow(
        craftCell('FÍSICO', { orientation: 'vertical', fontSize: 5, colSpan: 2, height: 50, style: 'itemTitle' }),
        craftCell('MECÁNICO', { orientation: 'vertical', fontSize: 5, colSpan: 2, height: 50, style: 'itemTitle' }),
        craftCell('QUÍMICO', { orientation: 'vertical', fontSize: 5, colSpan: 2, height: 50, style: 'itemTitle' }),
        craftCell('BIOLÓGICO', { orientation: 'vertical', fontSize: 5, colSpan: 2, height: 50, style: 'itemTitle' }),
        craftCell('ERGONÓMICO', { orientation: 'vertical', fontSize: 5, colSpan: 2, height: 50, style: 'itemTitle' }),
        craftCell('PSICOSOCIAL', { orientation: 'vertical', fontSize: 5, colSpan: 2, height: 50, style: 'itemTitle' }),
    ),
    ...record.jobHistory.map(e => craftRow(
        craftCell(e.jobHistoryCompany, { colSpan: 12 }),
        craftCell(e.jobHistoryPosition, { colSpan: 10 }),
        craftCell(e.jobHistoryActivity, { colSpan: 15 }),
        craftCell(e.jobHistoryTime.toString(), { colSpan: 6 }),
        craftCell(e.jobHistoryRiskPhysical ? 'x' : ' ', { colSpan: 2 }),
        craftCell(e.jobHistoryRiskMechanical ? 'x' : ' ', { colSpan: 2 }),
        craftCell(e.jobHistoryRiskChemical ? 'x' : ' ', { colSpan: 2 }),
        craftCell(e.jobHistoryRiskBiological ? 'x' : ' ', { colSpan: 2 }),
        craftCell(e.jobHistoryRiskErgonomic ? 'x' : ' ', { colSpan: 2 }),
        craftCell(e.jobHistoryRiskPsychosocial ? 'x' : ' ', { colSpan: 2 }),
        craftCell(e.jobHistoryObservation ?? '', { colSpan: 15 }),
    ))
];

const jobRiskLayout: CraftItemFunc<InitialRecord> = (record) => [
    craftRow(
        craftTitle('PUESTO DE TRABAJO / ÁREA', { rowSpan: 2, colSpan: 17 }),
        craftTitle('ACTIVIDADES', { rowSpan: 2, colSpan: 19 }),
        craftTitle('FISICO', { colSpan: 10 }),
        craftTitle('MECÁNICO', { colSpan: 15 }),
        craftTitle('QUÍMICO', { colSpan: 9 }),
    ),
    craftRow(
        craftCell('Temperaturas altas', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Temperaturas bajas', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Radiación Ionizante', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Radiación No Ionizante', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Ruido', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Vibración', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Iluminación', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Ventilación', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Fluido eléctrico', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Otros', { height: 150, orientation: 'vertical', style: 'itemTitle' }),

        craftCell('Atrapamiento entre máquinas', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Atrapamiento entre superficies', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Atrapamiento entre objetos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Caída de objetos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Caídas al mismo nivel', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Caídas a diferente nivel', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Contacto eléctrico', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Contacto con superficies de trabajos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Proyección de partículas - fragmentos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Proyección de fluidos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Pinchazos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Cortes', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Atropellamientos por vehículos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Choques / Colisión vehicular', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Otros', { height: 150, orientation: 'vertical', style: 'itemTitle' }),

        craftCell('Sólidos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Polvos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Humos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Líquidos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Vapores', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Aerosoles', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Neblinas', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Gaseosos', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Otros', { height: 150, orientation: 'vertical', style: 'itemTitle' }),
    ),
    ...record.jobRisks.map((e, i) => craftRow(
        craftCell((i + 1).toString().padStart(2, '0'), { colSpan: 2 }),
        craftCell(e.name, { colSpan: 15 }),
        craftCell(e.activity, { colSpan: 19 }),
        craftCell(e.physicalRiskHighTemperature ? 'x' : ''),
        craftCell(e.physicalRiskLowTemperature ? 'x' : ''),
        craftCell(e.physicalRiskIonicRadiation ? 'x' : ''),
        craftCell(e.physicalRiskNonIonicRadiation ? 'x' : ''),
        craftCell(e.physicalRiskNoise ? 'x' : ''),
        craftCell(e.physicalRiskVibration ? 'x' : ''),
        craftCell(e.physicalRiskIllumination ? 'x' : ''),
        craftCell(e.physicalRiskVentilation ? 'x' : ''),
        craftCell(e.physicalRiskElectricFluid ? 'x' : ''),
        craftCell(e.physicalRiskOther ? 'x' : ''),
        craftCell(e.mechanicRiskEntrapmentBetweenMachines ? 'x' : ''),
        craftCell(e.mechanicRiskTrappingBetweenSurfaces ? 'x' : ''),
        craftCell(e.mechanicRiskEntrapmentBetweenObjects ? 'x' : ''),
        craftCell(e.mechanicRiskObjectFalling ? 'x' : ''),
        craftCell(e.mechanicRiskSameLevelFalling ? 'x' : ''),
        craftCell(e.mechanicRiskDifferentLevelFalling ? 'x' : ''),
        craftCell(e.mechanicRiskElectricContact ? 'x' : ''),
        craftCell(e.mechanicRiskSurfacesContact ? 'x' : ''),
        craftCell(e.mechanicRiskParticlesProjection ? 'x' : ''),
        craftCell(e.mechanicRiskFluidProjection ? 'x' : ''),
        craftCell(e.mechanicRiskJab ? 'x' : ''),
        craftCell(e.mechanicRiskCut ? 'x' : ''),
        craftCell(e.mechanicRiskHitByVehicles ? 'x' : ''),
        craftCell(e.mechanicRiskVehicleCollision ? 'x' : ''),
        craftCell(e.mechanicRiskOther ? 'x' : ''),
        craftCell(e.chemicalRiskSolid ? 'x' : ''),
        craftCell(e.chemicalRiskDust ? 'x' : ''),
        craftCell(e.chemicalRiskSmoke ? 'x' : ''),
        craftCell(e.chemicalRiskLiquid ? 'x' : ''),
        craftCell(e.chemicalRiskSteam ? 'x' : ''),
        craftCell(e.chemicalRiskAerosol ? 'x' : ''),
        craftCell(e.chemicalRiskMist ? 'x' : ''),
        craftCell(e.chemicalRiskGas ? 'x' : ''),
        craftCell(e.chemicalRiskOther ? 'x' : ''),
    ))
];

const jobRiskPreventionLayout: CraftItemFunc<InitialRecord> = (record) => [
    craftRow(
        craftTitle('PUESTO DE TRABAJO / ÁREA', { rowSpan: 2, colSpan: 13 }),
        craftTitle('ACTIVIDADES', { rowSpan: 2, colSpan: 13 }),
        craftTitle('BIOLÓGICO', { colSpan: 7 }),
        craftTitle('ERGONÓMICO', { colSpan: 5 }),
        craftTitle('PSICOSOCIAL', { colSpan: 13 }),
        craftTitle('MEDIDAS PREVENTIVAS', { rowSpan: 2, colSpan: 19 }),
    ),
    craftRow(
        craftCell('Virus', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Hongos', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Bacterias', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Parásitos', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Exposición a vectores', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Exposición a animales selváticos', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Otros', { height: 175, orientation: 'vertical', style: 'itemTitle' }),

        craftCell('Manejo manual de cargas', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Movimiento repetitivos', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Posturas forzadas', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Trabajos con PVD', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Otros', { height: 175, orientation: 'vertical', style: 'itemTitle' }),

        craftCell('Monotonía del trabajo', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Sobrecarga laboral', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Minuciosidad de la tarea', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Alta responsabilidad', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Autonomía  en la toma de decisiones', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Supervisión y estilos de dirección deficiente', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Conflicto de rol', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Falta de Claridad en las funciones', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Incorrecta distribución del trabajo', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Turnos rotativos', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Relaciones interpersonales', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Inestabilidad laboral', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
        craftCell('Otros', { height: 175, orientation: 'vertical', style: 'itemTitle' }),
    ),
    ...record.jobRisks.map((e, i) => craftRow(
        craftCell((i + 1).toString().padStart(2, '0'), { colSpan: 2 }),
        craftCell(e.name, { colSpan: 11 }),
        craftCell(e.activity, { colSpan: 13 }),
        craftCell(e.biologicalRiskVirus ? 'x' : ''),
        craftCell(e.biologicalRiskFungus ? 'x' : ''),
        craftCell(e.biologicalRiskBacteria ? 'x' : ''),
        craftCell(e.biologicalRiskParasites ? 'x' : ''),
        craftCell(e.biologicalRiskExposureToVectors ? 'x' : ''),
        craftCell(e.biologicalRiskExposureToWildlifeAnimals ? 'x' : ''),
        craftCell(e.biologicalRiskOther ? 'x' : ''),
        craftCell(e.ergonomicRiskManualHandlingLoads ? 'x' : ''),
        craftCell(e.ergonomicRiskRepetitiveMoves ? 'x' : ''),
        craftCell(e.ergonomicRiskForcedPostures ? 'x' : ''),
        craftCell(e.ergonomicRiskWorkWithPvd ? 'x' : ''),
        craftCell(e.ergonomicRiskOther ? 'x' : ''),
        craftCell(e.psychosocialRiskMonotony ? 'x' : ''),
        craftCell(e.psychosocialRiskWorkOverload ? 'x' : ''),
        craftCell(e.psychosocialRiskThoroughnessOfTheTask ? 'x' : ''),
        craftCell(e.psychosocialRiskHighResponsibility ? 'x' : ''),
        craftCell(e.psychosocialRiskTakingResponsibilityAutonomy ? 'x' : ''),
        craftCell(e.psychosocialRiskSupervision ? 'x' : ''),
        craftCell(e.psychosocialRiskRoleConflict ? 'x' : ''),
        craftCell(e.psychosocialRiskNonFunctionClarify ? 'x' : ''),
        craftCell(e.psychosocialRiskBadWorkDistribution ? 'x' : ''),
        craftCell(e.psychosocialRiskRotativeShift ? 'x' : ''),
        craftCell(e.psychosocialRiskIntrapersonalRelations ? 'x' : ''),
        craftCell(e.psychosocialRiskJobInstability ? 'x' : ''),
        craftCell(e.psychosocialRiskOther ? 'x' : ''),
        craftCell(e.preventiveMeasure, { colSpan: 19 }),
    ))
];