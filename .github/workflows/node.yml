# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Docker Image Deployment
on:
  push:
    branches:
      - develop
  pull_request: 
    branches:
      - develop
    types:
      - closed
jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest .
        working-directory: .
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:latest
            docker run -d \
              --name $CONTAINER_NAME \
              $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:latest \
              -p 3001:3001 \
              --network="$CONTAINER_NETWORK" \
              -v $LOCAL_FOLDER_MEDICAL_REPORT:$CONTAINER_FOLDER_MEDICAL_REPORT \
              -v $LOCAL_FOLDER_SIGNATURES:$CONTAINER_FOLDER_SIGNATURES \
              -v $LOCAL_FOLDER_EEQ:$CONTAINER_FOLDER_EEQ \
              -v $LOCAL_FOLDER_IPEGES:$CONTAINER_FOLDER_IPEGES \
              -e app.enviroment= $ENVIRONMENT \
              -e database.sql.type = $DATABASE_TYPE \
              -e database.sql.host = $DATABASE_HOST \
              -e database.sql.port = $DATABASE_PORT \
              -e database.sql.username = $DATABASE_USERNAME \
              -e database.sql.password = $DATABASE_PASSWORD \
              -e database.sql.database = $DATABASE_DATABASE \
              -e jwt.default.secret = $JWT_DEFAULT_SECRET \
              -e jwt.default.expiresIn = $JWT_DEFAULT_EXPIRES_IN \
              -e jwt.refresh.secret = $JWT_REFRESH_SECRET \
              -e jwt.refresh.expiresIn = $JWT_REFRESH_EXPIRES_IN \
              -e apikey.expiresIn = $API_KEY_EXPIRES_IN \