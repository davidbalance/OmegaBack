name: Docker Image Deployment
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types:
      - closed

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_IMAGE }} .
        working-directory: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    strategy:
      fail-fast: false  # Optional: stop job on first error (set to true for stricter failure handling)

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: SSH into server and deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop and remove any existing container with the specified name
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker rm ${{ secrets.CONTAINER_NAME }} || true

            # Pull the latest Docker image from the provided source
            docker pull ${{ secrets.DOCKER_IMAGE }}

            # Example: Create a container with environment variables and volume mounts
            docker run -d --network="${{ secrets.CONTAINER_NETWORK}}" --name ${{ secrets.CONTAINER_NAME}} \
              -p 3001:3001 \
              -v ${{ secrets.LOCAL_FOLDER_MEDICAL_REPORT }}:${{ secrets.CONTAINER_FOLDER_MEDICAL_REPORT }} \
              -v ${{ secrets.LOCAL_FOLDER_SIGNATURES }}:${{ secrets.CONTAINER_FOLDER_SIGNATURES }} \
              -v ${{ secrets.LOCAL_FOLDER_EEQ }}:${{ secrets.CONTAINER_FOLDER_EEQ }} \
              -v ${{ secrets.LOCAL_FOLDER_IPEGES }}:${{ secrets.CONTAINER_FOLDER_IPEGES }} \
              -e APP_ENVIRONMENT=${{ secrets.ENVIRONMENT}} \
              -e DATABASE_SQL_TYPE=${{ secrets.DATABASE_TYPE}} \
              -e DATABASE_SQL_HOST=${{ secrets.DATABASE_HOST}} \
              -e DATABASE_SQL_PORT=${{ secrets.DATABASE_PORT}} \
              -e DATABASE_SQL_USERNAME=${{ secrets.DATABASE_USERNAME}} \
              -e DATABASE_SQL_PASSWORD=${{ secrets.DATABASE_PASSWORD}} \
              -e DATABASE_SQL_DATABASE=${{ secrets.DATABASE_DATABASE}} \
              -e JWT_DEFAULT_SECRET=${{ secrets.JWT_DEFAULT_SECRET}} \
              -e JWT_DEFAULT_EXPIRES_IN=${{ secrets.JWT_DEFAULT_EXPIRES_IN}} \
              -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET}} \
              -e JWT_REFRESH_EXPIRES_IN=${{ secrets.JWT_REFRESH_EXPIRES_IN}} \
              -e APIKEY_EXPIRES_IN=${{ secrets.API_KEY_EXPIRES_IN }} \
              ${{ secrets.DOCKER_IMAGE }}
