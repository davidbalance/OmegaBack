# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Docker Image Deployment
on:
  push:
    branches:
      - develop
  pull_request: 
    branches:
      - develop
    types:
      - closed
jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest .
        working-directory: .
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker rm ${{ secrets.CONTAINER_NAME }} || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
            docker run -d \ 
              --name ${{ secrets.CONTAINER_NAME }} \ 
              -p 80:80 \ 
              --network="${{ secrets.CONTAINER_NETWORK }}" \
              -v ${{ secrets.LOCAL_FOLDER_MEDICAL_REPORT }}:${{ secrets.CONTAINER_FOLDER_MEDICAL_REPORT }} \ 
              -v ${{ secrets.LOCAL_FOLDER_SIGNATURES }}:${{ secrets.CONTAINER_FOLDER_SIGNATURES }} \ 
              -v ${{ secrets.LOCAL_FOLDER_EEQ }}:${{ secrets.CONTAINER_FOLDER_EEQ }} \ 
              -v ${{ secrets.LOCAL_FOLDER_IPEGES }}:${{ secrets.CONTAINER_FOLDER_IPEGES }} \ 
              - e app.enviroment=${{ secrets.ENVIRONMENT }} \ 
              - e database.sql.type=${{ secrets.DATABASE_TYPE }}  \ 
              - e database.sql.host=${{ secrets.DATABASE_HOST }}  \ 
              - e database.sql.port=${{ secrets.DATABASE_PORT }} \ 
              - e database.sql.username=${{ secrets.DATABASE_USERNAME }}  \ 
              - e database.sql.password=${{ secrets.DATABASE_PASSWORD }}  \ 
              - e database.sql.database=${{ secrets.DATABASE_DATABASE }}  \ 
              - e jwt.default.secret=${{ secrets.JWT_DEFAULT_SECRET }} \
              - e jwt.default.expiresIn=${{ secrets.JWT_DEFAULT_EXPIRES_IN }} \ 
              - e jwt.refresh.secret=${{ secrets.JWT_REFRESH_SECRET }} \
              - e jwt.refresh.expiresIn=${{ secrets.JWT_REFRESH_EXPIRES_IN }} \ 
              - e apikey.expiresIn=${{ secrets.API_KEY_EXPIRES_IN }} \ 
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest


    
