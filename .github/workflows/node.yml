name: Docker Image Deployment
on:
  push:
    branches:
      - develop
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']
    env:
      TEST_ENV: ${{ secrets.TEST_ENV }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create test env file
        run: |
          echo "$TEST_ENV" >> .env

      - name: Test signature
        run : |
          cp ./templates/my-template-signature/0000000000/0000000000.png ./signatures/0000000000/0000000000.png

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: ['22.x']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_IMAGE }} .
        working-directory: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    strategy:
      fail-fast: false

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: SSH into server and backup database
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker exec ${{ secrets.MYSQL_CONTAINER_NAME }} bash -c "mysqldump --no-create-info -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} > /backup/backup_$(date +%F_%T).sql"

      - name: SSH into server and deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ secrets.DOCKER_COMPOSE_DIRECTORY }}
            docker-compose down || true
            docker-compose pull
            docker-compose up -d
            docker rmi $(docker images -f "dangling=true" -q) || true
