# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Docker Image Deployment
on:
  push:
    branches:
      - develop
  pull_request: 
    branches:
      - develop
    types:
      - closed
jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22.x']
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest .
        working-directory: .
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        env:
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
          CONTAINER_NETWORK: ${{ secrets.CONTAINER_NETWORK }}
          LOCAL_FOLDER_MEDICAL_REPORT: ${{ secrets.LOCAL_FOLDER_MEDICAL_REPORT }}
          LOCAL_FOLDER_SIGNATURES: ${{ secrets.LOCAL_FOLDER_SIGNATURES }}
          LOCAL_FOLDER_EEQ: ${{ secrets.LOCAL_FOLDER_EEQ }}
          LOCAL_FOLDER_IPEGES: ${{ secrets.LOCAL_FOLDER_IPEGES }}
          CONTAINER_FOLDER_MEDICAL_REPORT: ${{ secrets.CONTAINER_FOLDER_MEDICAL_REPORT }}
          CONTAINER_FOLDER_SIGNATURES: ${{ secrets.CONTAINER_FOLDER_SIGNATURES }}
          CONTAINER_FOLDER_EEQ: ${{ secrets.CONTAINER_FOLDER_EEQ }}
          CONTAINER_FOLDER_IPEGES: ${{ secrets.CONTAINER_FOLDER_IPEGES }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          DATABASE_TYPE: ${{ secrets.DATABASE_TYPE }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_DATABASE: ${{ secrets.DATABASE_DATABASE }}
          JWT_DEFAULT_SECRET: ${{ secrets.JWT_DEFAULT_SECRET }}
          JWT_DEFAULT_EXPIRES_IN: ${{ secrets.JWT_DEFAULT_EXPIRES_IN }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          JWT_REFRESH_EXPIRES_IN: ${{ secrets.JWT_REFRESH_EXPIRES_IN }}
          API_KEY_EXPIRES_IN: ${{ secrets.API_KEY_EXPIRES_IN }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          envs: CONTAINER_NAME,DOCKER_IMAGE,CONTAINER_NETWORK,LOCAL_FOLDER_MEDICAL_REPORT,LOCAL_FOLDER_SIGNATURES,LOCAL_FOLDER_EEQ,LOCAL_FOLDER_IPEGES,CONTAINER_FOLDER_MEDICAL_REPORT,CONTAINER_FOLDER_SIGNATURES,CONTAINER_FOLDER_EEQ,CONTAINER_FOLDER_IPEGES,ENVIRONMENT,DATABASE_TYPE,DATABASE_HOST,DATABASE_PORT,DATABASE_USERNAME,DATABASE_PASSWORD,DATABASE_DATABASE,JWT_DEFAULT_SECRET,JWT_DEFAULT_EXPIRES_IN,JWT_REFRESH_SECRET,JWT_REFRESH_EXPIRES_IN,API_KEY_EXPIRES_IN
          script: |
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            docker rmi $DOCKER_IMAGE || true
            docker pull $DOCKER_IMAGE
            docker run -d --network="host" --name $CONTAINER_NAME -p 3001:3001 -e APP_ENVIRONMENT=production -e DATABASE_SQL_TYPE=mysql -e DATABASE_SQL_HOST=localhost -e DATABASE_SQL_PORT=3306 -e DATABASE_SQL_USERNAME=root -e DATABASE_SQL_PASSWORD=Generica1243@ -e DATABASE_SQL_DATABASE=omega -e JWT_DEFAULT_SECRET=PKmlQYGhvGwpeSmzzTQNfMhWvVHnS9aYJ/Ydblg1KU8dlsais5prOxeyfApm9AGv9T5DAykA/0VXLKFjQkI0V50lGZlcuU80l0wc+q6lF9TkgzLbsasYTIC1SfTBVZUSmOrlvEEIWDx4d1gAKl4V4Pk/5OHcBJ6TepU2/yK8FZtBjqj19Vyj8CeeZxoCnsV0Rl7aHaHbYzWu2a9o5iQ97DCJkNkZ+0uizQ++NwiA2ONr1ztBm/xjiicgm/ARFFaW0sMClyMnInuQE5EsNrHObc+A4HFuRfSb2VqqeaiElonmqxmbcIO9VEf6N1b/fTxBcwNGwYXfWiOQsCuU9eSmVw== -e JWT_DEFAULT_EXPIRES_IN=900 -e JWT_REFRESH_SECRET=+xvGhZ7bUuyQtnsmEbvytN16McoZtjZQua4IqwNVuRVcgIVMQ2beMxEjElASWbARO25nOg7MPQAXGrx8xpQnACv7z2OCVb1yp9oZZWFlWJaKEaavIQKLscjCE7gI97Ocux1rcnIpSjkE6z5CODU6c5kmgBXW74X6sGnYEr9H27TOt7hnt0yB52cQQHlVvcSLxPdHoC4A1Er9DoYM6R0Zb81ZyEtd1v6PS+MsF1OuViFHhOHiH0LBd6FX2tUUsNLuZQDyzyHaqrszBe9IUN837DISJjcEiQY+V34It6EUUWY+8/9osUUyWGXQhMUxoaNWEldOvB0ARtbsJzCyQsa2/g== -e JWT_REFRESH_EXPIRES_IN=86400 -e APIKEY_EXPIRES_IN=315360000 $DOCKER_IMAGE