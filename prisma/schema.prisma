// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum PatientGender {
  female
  male
}

enum MedicalOrderStatus {
  created
  validated
}

// Logger Module
model Logger {
  id        String   @id @default(uuid()) @map("logger_id") @db.Char(36)
  level     String   @map("logger_level") @db.VarChar(32)
  message   String   @map("logger_message") @db.Text
  timestamp DateTime @default(now()) @map("logger_timestamp")

  @@map("logger")
}

// Increment Module
model Increment {
  id    String @id @default(uuid()) @map("increment_id") @db.Char(36)
  key   String @unique() @map("increment_key") @db.VarChar(32)
  count Int    @default(0) @map("increment_count") @db.Int

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("tbl_increments")
}

// Auth Module
model Auth {
  id       String @id @default(uuid()) @map("auth_id") @db.Char(36)
  email    String @unique @map("auth_email") @db.VarChar(128)
  name     String @map("auth_name") @db.VarChar(128)
  lastname String @map("auth_lastname") @db.VarChar(128)
  password String @map("auth_password") @db.VarChar(256)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  apikeys      ApiKey[]
  token        Token?
  authResource AuthResource[]
  logo         Logo?          @relation(fields: [logoId], references: [id], onDelete: SetNull)
  logoId       String?        @map("logo_id") @db.Char(36)

  @@index(fields: [email], map: "idx_auth_email")
  @@map("tbl_a_auths")
}

model ApiKey {
  id     String @id @default(uuid()) @map("apikey_id") @db.Char(36)
  apikey String @map("apikey_value") @db.Char(36)
  name   String @map("apikey_name") @db.VarChar(256)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  auth   Auth   @relation(fields: [authId], references: [id], onDelete: Cascade)
  authId String @map("auth_id") @db.Char(36)

  @@unique(fields: [name, authId], map: "unq_apikey_auth_name")
  @@map("tbl_a_apikeys")
}

model Token {
  id    String @id @default(uuid()) @map("token_id") @db.Char(36)
  token String @map("token_value") @db.Text

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  auth   Auth   @relation(fields: [authId], references: [id], onDelete: Cascade)
  authId String @unique @map("auth_id") @db.Char(36)

  @@map("tbl_a_tokens")
}

model Resource {
  id      String  @id @default(uuid()) @map("resource_id") @db.Char(36)
  label   String  @map("resource_label") @db.VarChar(128)
  address String  @unique @map("resource_address") @db.VarChar(256)
  icon    String  @map("resource_icon") @db.VarChar(64)
  order   Int     @default(0) @map("resource_order") @db.Int
  hidden  Boolean @default(true) @map("resource_hidden") @db.TinyInt

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  authResource AuthResource[]

  @@map("tbl_a_resources")
}

model AuthResource {
  auth   Auth   @relation(fields: [authId], references: [id], onDelete: Cascade)
  authId String @map("auth_id") @db.Char(36)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  resourceId String   @map("resource_id") @db.Char(36)

  @@id(fields: [authId, resourceId])
  @@unique(fields: [authId, resourceId], map: "unq_auth_respurce")
  @@map("tbl_a_auth_resources")
}

model Logo {
  id   String @id @default(uuid()) @map("logo_id") @db.Char(36)
  name String @unique @map("logo_name") @db.VarChar(128)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  auth Auth[]

  @@map("tbl_a_logos")
}

// Medical Module
model MedicalClient {
  id              String        @id @default(uuid()) @map("medical_client_id") @db.Char(36)
  managementId    String?       @map("management_id") @db.Char(36)
  managementName  String?       @map("management_name") @db.VarChar(128)
  areaId          String?       @map("area_id") @db.Char(36)
  areaName        String?       @map("area_name") @db.VarChar(128)
  jobPosition     String?       @map("job_position_name") @db.VarChar(128)
  patientDni      String        @unique @map("patient_dni") @db.VarChar(16)
  patientName     String        @map("patient_name") @db.VarChar(128)
  patientLastname String        @map("patient_lastname") @db.VarChar(128)
  patientBirthday DateTime      @map("patient_birthday") @db.Date
  patientRole     String?       @map("patient_role") @db.VarChar(128)
  patientGender   PatientGender @default(male) @map("patient_gender")

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  email   MedicalEmail[]
  orders  MedicalOrder[]
  records MedicalRecord[]

  @@index(fields: [patientDni], map: "idx_m_client_dni")
  @@map("tbl_m_clients")
}

model MedicalEmail {
  id      String  @id @default(uuid()) @map("medical_email_id") @db.Char(36)
  email   String  @map("medical_email_value") @db.VarChar(128)
  default Boolean @default(false) @map("medical_email_default") @db.TinyInt

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  client   MedicalClient @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId String        @map("medical_client_id") @db.Char(36)

  @@unique(fields: [email, clientId], map: "unq_m_email")
  @@map("tbl_m_emails")
}

model MedicalRecord {
  id       String @id @default(uuid()) @map("medical_record_id") @db.Char(36)
  filepath String @map("medical_record_filepath") @db.Text
  name     String @map("medical_record_name") @db.VarChar(64)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  client   MedicalClient @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId String        @map("medical_client_id") @db.Char(36)

  @@map("tbl_m_records")
}

model MedicalOrder {
  id                      String             @id @default(uuid()) @map("medical_order_id") @db.Char(36)
  doctorDni               String             @map("doctor_dni") @db.VarChar(10)
  doctorFullname          String             @map("doctor_fullname") @db.VarChar(128)
  doctorSignature         String             @map("doctor_signature") @db.VarChar(512)
  locationCorporativeName String             @map("corporative_name") @db.VarChar(64)
  locationCompanyRuc      String             @map("company_ruc") @db.VarChar(13)
  locationCompanyName     String             @map("company_name") @db.VarChar(64)
  locationBranchName      String             @map("branch_name") @db.VarChar(128)
  email                   Boolean            @default(false) @map("medical_order_email_status") @db.TinyInt
  process                 String             @map("medical_order_process") @db.VarChar(64)
  year                    Int                @map("medical_order_year") @db.Int
  status                  MedicalOrderStatus @default(created) @map("medical_order_status")

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  client   MedicalClient @relation(fields: [clientId], references: [id], onDelete: Restrict)
  clientId String        @map("medical_client_id") @db.Char(36)

  tests MedicalTest[]

  @@index(fields: [doctorDni], map: "idx_m_order_doctorDni")
  @@index(fields: [locationCompanyRuc], map: "idx_m_order_companyRuc")
  @@map("tbl_m_orders")
}

model MedicalTest {
  id          String  @id @default(uuid()) @map("medical_test_id") @db.Char(36)
  examName    String  @map("exam_name") @db.VarChar(128)
  examSubtype String  @map("exam_subtype") @db.VarChar(64)
  examType    String  @map("exam_type") @db.VarChar(64)
  checklist   Boolean @default(false) @map("medical_test_checklist_status") @db.TinyInt

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  order   MedicalOrder @relation(fields: [orderId], references: [id], onDelete: Restrict)
  orderId String       @map("medical_order_id") @db.Char(36)

  result   MedicalResult?
  report   MedicalReport?
  diseases MedicalDiseaseReport[]

  @@map("tbl_m_tests")
}

model MedicalResult {
  id       String  @id @default(uuid()) @map("medical_result_id") @db.Char(36)
  filepath String? @map("medical_result_filepath") @db.VarChar(512)
  hasFile  Boolean @default(false) @map("medical_result_has_file") @db.TinyInt

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  test   MedicalTest @relation(fields: [testId], references: [id], onDelete: Restrict)
  testId String      @unique @map("medical_test_id") @db.Char(36)

  @@map("tbl_m_results")
}

model MedicalReport {
  id       String   @id @default(uuid()) @map("medical_report_id") @db.Char(36)
  content  String?  @map("medical_report_content") @db.LongText
  filepath String?  @map("medical_report_filepath") @db.VarChar(512)
  createAt DateTime @default(now()) @map("medical_report_create_at")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  test   MedicalTest @relation(fields: [testId], references: [id], onDelete: Restrict)
  testId String      @unique @map("medical_test_id") @db.Char(36)

  @@map("tbl_m_reports")
}

model MedicalDiseaseReport {
  id               String @id @default(uuid()) @map("medical_disease_id") @db.Char(36)
  diseaseId        String @map("disease_id") @db.Char(36)
  diseaseName      String @map("disease_name") @db.VarChar(128)
  diseaseGroupId   String @map("disease_group_id") @db.Char(36)
  diseaseGroupName String @map("disease_group_name") @db.VarChar(128)
  commentary       String @map("medical_disease_commentary") @db.Text

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  test   MedicalTest @relation(fields: [testId], references: [id], onDelete: Restrict)
  testId String      @map("medical_test_id") @db.Char(36)

  @@map("tbl_m_disease_reports")
}

// Disease Module
model DiseaseGroup {
  id   String @id @default(uuid()) @map("disease_group_id") @db.Char(36)
  name String @map("disease_group_name") @db.VarChar(128)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  diseases Disease[]

  @@map("tbl_d_disease_groups")
}

model Disease {
  id   String @id @default(uuid()) @map("disease_id") @db.Char(36)
  name String @map("disease_name") @db.VarChar(128)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  group   DiseaseGroup @relation(fields: [groupId], references: [id], onDelete: Restrict)
  groupId String       @map("disease_group_id") @db.Char(36)

  @@unique(fields: [name, groupId], map: "unq_d_disease_name")
  @@map("tbl_d_diseases")
}

// Laboratory Module
model ExamType {
  id   String @id @default(uuid()) @map("exam_type_id") @db.Char(36)
  name String @map("exam_type_name") @db.VarChar(64)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  subtypes ExamSubtype[]

  @@map("tbl_lab_exam_types")
}

model ExamSubtype {
  id   String @id @default(uuid()) @map("exam_subtype_id") @db.Char(36)
  name String @map("exam_subtype_name") @db.VarChar(64)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  type   ExamType @relation(fields: [typeId], references: [id], onDelete: Cascade)
  typeId String   @map("exam_type_id") @db.Char(36)

  exams Exam[]

  @@unique(fields: [name, typeId], map: "unq_lab_examSubtype_name")
  @@map("tbl_lab_exam_subtypes")
}

model Exam {
  id   String @id @default(uuid()) @map("exam_id") @db.Char(36)
  name String @map("exam_name") @db.VarChar(256)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  subtype   ExamSubtype @relation(fields: [subtypeId], references: [id], onDelete: Cascade)
  subtypeId String      @map("exam_subtype_id") @db.Char(36)

  @@unique(fields: [name, subtypeId], map: "unq_lab_exam_name")
  @@map("tbl_lab_exams")
}

// Location Module
model CorporativeGroup {
  id   String @id @default(uuid()) @map("corporative_id") @db.Char(36)
  name String @map("corporative_name") @db.VarChar(64)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  companies Company[]

  @@map("tbl_lo_corporative_groups")
}

model Company {
  id      String @id @default(uuid()) @map("company_id") @db.Char(36)
  name    String @map("company_name") @db.VarChar(64)
  ruc     String @map("company_ruc") @db.VarChar(13)
  address String @map("company_address") @db.VarChar(128)
  phone   String @map("company_phone") @db.VarChar(16)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  branches Branch[]

  corporative   CorporativeGroup @relation(fields: [corporativeId], references: [id], onDelete: Cascade)
  corporativeId String           @map("corporative_id") @db.Char(36)

  @@unique(fields: [ruc, corporativeId], map: "unq_lo_company_ruc")
  @@map("tbl_lo_companies")
}

model Branch {
  id   String @id @default(uuid()) @map("branch_id") @db.Char(36)
  name String @map("branch_name") @db.VarChar(128)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  city   City @relation(fields: [cityId], references: [id], onDelete: Restrict)
  cityId Int  @map("city_id") @db.Int

  company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId String  @map("company_id") @db.Char(36)

  @@map("tbl_lo_branches")
}

model City {
  id   Int    @id @default(autoincrement()) @map("city_id") @db.Int
  name String @map("city_name") @db.VarChar(64)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  branches Branch[]

  @@map("tbl_lo_cities")
}

model Area {
  id   String @id @default(uuid()) @map("area_id") @db.Char(36)
  name String @map("area_name") @db.VarChar(128)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("tbl_lo_areas")
}

model Management {
  id   String @id @default(uuid()) @map("management_id") @db.Char(36)
  name String @map("management_name") @db.VarChar(128)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("tbl_lo_managements")
}

model JobPosition {
  id   String @id @default(uuid()) @map("job_position_id") @db.Char(36)
  name String @map("job_position_name") @db.VarChar(128)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("tbl_lo_job_positions")
}

// Profile Module
model User {
  id       String  @id @default(uuid()) @map("user_id") @db.Char(36)
  dni      String  @unique @map("user_dni") @db.VarChar(16)
  email    String? @map("user_email") @db.VarChar(128)
  name     String  @map("user_name") @db.VarChar(128)
  lastname String  @map("user_lastname") @db.VarChar(128)
  auth     String? @map("user_auth") @db.Char(36)

  isActive  Boolean   @default(true) @map("is_active") @db.TinyInt
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  attributes Attribute[]
  doctor     Doctor?
  patient    Patient?

  @@map("tbl_u_users")
}

model Doctor {
  id        String  @id @default(uuid()) @map("doctor_id") @db.Char(36)
  signature String  @map("doctor_signature") @db.VarChar(512)
  hasFile   Boolean @default(false) @map("doctor_has_file") @db.TinyInt

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id") @db.Char(36)

  @@map("tbl_u_doctors")
}

model Patient {
  id       String        @id @default(uuid()) @map("patient_id") @db.Char(36)
  birthday DateTime      @map("patient_birthday") @db.Date
  gender   PatientGender @default(male) @map("patient_gender")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Restrict)
  userId String @unique @map("user_id") @db.Char(36)

  @@map("tbl_u_patients")
}

model Attribute {
  id    String @id @default(uuid()) @map("user_attribute_id") @db.Char(36)
  name  String @map("user_attribute_name") @db.VarChar(64)
  value String @map("user_attribute_value") @db.VarChar(512)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id") @db.Char(36)

  @@unique(fields: [name, userId], map: "unq_u_attribute_name")
  @@map("tbl_u_attributes")
}

// ------------------------------------------------- Views ------------------------------------------------- 

// Logger Module
view LoggerLevelModel {
  level String @unique @map("logger_level") @db.VarChar(32)

  @@map("v_logger_levels")
}

// Auth Module
view ApiKeyValueModel {
  apiKeyValue String @unique @map("apikey_value") @db.Char(36)
  apiKeyName  String @map("apikey_name") @db.VarChar(256)
  authId      String @map("auth_id") @db.Char(36)

  @@map("v_a_apikey_values")
}

view ApiKeyModel {
  apiKeyId   String @unique @map("apikey_id") @db.Char(36)
  apiKeyName String @map("apikey_name") @db.VarChar(256)
  authId     String @map("auth_id") @db.Char(36)

  @@map("v_a_apikeys")
}

view AuthResourceModel {
  authId          String @unique @map("auth_id") @db.Char(36)
  resourceId      String @map("resource_id") @db.Char(36)
  resourceLabel   String @map("resource_label") @db.VarChar(128)
  resourceAddress String @map("resource_address") @db.VarChar(256)
  resourceOrder   Int    @map("resource_order") @db.Int
  resourceIcon    String @map("resource_icon") @db.VarChar(64)

  @@map("v_a_auth_resources")
}

view AuthModel {
  authId       String  @unique @map("auth_id") @db.Char(36)
  authEmail    String  @map("auth_email") @db.VarChar(128)
  authName     String  @map("auth_name") @db.VarChar(128)
  authLastname String  @map("auth_lastname") @db.VarChar(128)
  logo         String? @map("logo_name") @db.VarChar(128)

  @@map("v_a_auths")
}

view TokenModel {
  authId String @unique @map("auth_id") @db.Char(36)
  token  String @map("token_value") @db.Text

  @@map("v_a_tokens")
}

view LogoModel {
  logoId   String @unique @map("logo_id") @db.Char(36)
  logoName String @map("logo_name") @db.VarChar(128)

  @@map("v_a_logos")
}

view ResourceModel {
  resourceId      String @unique @map("resource_id") @db.Char(36)
  resourceLabel   String @map("resource_label") @db.VarChar(128)
  resourceAddress String @map("resource_address") @db.VarChar(256)
  resourceOrder   Int    @map("resource_order") @db.Int
  resourceIcon    String @map("resource_icon") @db.VarChar(64)

  @@map("v_a_resources")
}

// Medical Module
view ClientAreaModel {
  patientDni String  @unique @map("patient_dni") @db.VarChar(16)
  areaId     String? @map("area_id") @db.Char(36)
  areaName   String? @map("area_name") @db.VarChar(128)

  @@map("v_m_client_areas")
}

view ClientModel {
  patientId       String        @unique @map("medical_client_id") @db.Char(36)
  patientDni      String        @map("patient_dni") @db.VarChar(16)
  patientName     String        @map("patient_name") @db.VarChar(128)
  patientLastname String        @map("patient_lastname") @db.VarChar(128)
  patientBirthday DateTime      @map("patient_birthday") @db.Date
  patientGender   PatientGender @map("patient_gender")
  patientRole     String?       @map("patient_role") @db.VarChar(128)
  companyRuc      String?       @map("company_ruc") @db.VarChar(13)

  @@map("v_m_clients")
}

view ClientDoctorModel {
  patientId       String        @unique @map("medical_client_id") @db.Char(36)
  patientDni      String        @map("patient_dni") @db.VarChar(16)
  patientName     String        @map("patient_name") @db.VarChar(128)
  patientLastname String        @map("patient_lastname") @db.VarChar(128)
  patientBirthday DateTime      @map("patient_birthday") @db.Date
  patientGender   PatientGender @map("patient_gender")
  patientRole     String?       @map("patient_role") @db.VarChar(128)
  doctorDni       String        @map("doctor_dni") @db.VarChar(10)
  companyRuc      String?       @map("company_ruc") @db.VarChar(13)

  @@map("v_m_client_doctors")
}

view ClientEmailModel {
  emailId      String  @unique @map("medical_email_id") @db.Char(36)
  emailValue   String  @map("medical_email_value") @db.VarChar(128)
  emailDefault Boolean @map("medical_email_default") @db.TinyInt
  patientDni   String  @map("patient_dni") @db.VarChar(16)

  @@map("v_m_client_emails")
}

view ClientRecordModel {
  recordId           String   @unique @map("medical_record_id") @db.Char(36)
  recordFilepath     String   @map("medical_record_filepath") @db.Text
  recordName         String   @map("medical_record_name") @db.VarChar(64)
  recordEmissionDate DateTime @map("medical_record_create_at")
  patientDni         String   @map("patient_dni") @db.VarChar(16)

  @@map("v_m_client_records")
}

view ClientJobPositionModel {
  patientDni  String  @unique @map("patient_dni") @db.VarChar(16)
  jobPosition String? @map("job_position_name") @db.VarChar(128)

  @@map("v_m_client_job_positions")
}

view ClientManagementModel {
  patientDni     String  @unique @map("patient_dni") @db.VarChar(16)
  managementId   String? @map("management_id") @db.Char(36)
  managementName String? @map("management_name") @db.VarChar(128)

  @@map("v_m_client_managements")
}

view OrderChecklistModel {
  testId              String   @unique @map("test_id") @db.Char(36)
  testCheck           Boolean  @map("test_checklist") @db.TinyInt
  examName            String   @map("exam_name") @db.VarChar(128)
  patientDni          String   @map("patient_dni") @db.VarChar(16)
  patientName         String   @map("patient_name") @db.VarChar(128)
  patientLastname     String   @map("patient_lastname") @db.VarChar(128)
  orderId             String   @map("order_id") @db.Char(36)
  orderProcess        String   @map("medical_order_process") @db.VarChar(64)
  orderEmissionDate   DateTime @map("medical_order_emission_date") @db.Date
  locationCompanyRuc  String   @map("location_company_ruc") @db.VarChar(13)
  locationCompanyName String   @map("location_company_name") @db.VarChar(64)
  locationJobPosition String?  @map("location_job_position_name") @db.VarChar(128)

  @@map("v_m_order_checklist_items")
}

view OrderCloudFileModel {
  testId           String  @unique @map("test_id") @db.Char(36)
  patientDni       String  @map("patient_dni") @db.VarChar(16)
  patientFullname  String  @map("patient_fullname") @db.VarChar(128)
  orderId          String  @map("order_id") @db.Char(36)
  examName         String  @map("exam_name") @db.VarChar(128)
  resultHasFile    Boolean @map("result_has_file") @db.TinyInt
  reportHasContent Boolean @map("report_has_content") @db.TinyInt

  @@map("v_m_order_cloud_file_items")
}

view OrderDoctorModel {
  orderId           String             @unique @map("medical_order_id") @db.Char(36)
  orderProcess      String             @map("medical_order_process") @db.VarChar(64)
  orderMail         Boolean            @map("medical_order_email") @db.TinyInt
  orderStatus       MedicalOrderStatus @map("medical_order_status")
  orderLeftReport   Int                @map("medical_order_left_reports") @db.Int
  orderEmissionDate DateTime           @map("medical_order_emission_date") @db.Date
  doctorDni         String             @map("doctor_dni") @db.VarChar(10)
  patientDni        String             @map("patient_dni") @db.VarChar(16)

  @@map("v_m_order_doctors")
}

view OrderPatientModel {
  orderId             String             @unique @map("medical_order_id") @db.Char(36)
  orderProcess        String             @map("medical_order_process") @db.VarChar(64)
  orderMail           Boolean            @map("medical_order_email") @db.TinyInt
  orderEmissionDate   DateTime           @map("medical_order_emission_date") @db.Date
  orderStatus         MedicalOrderStatus @map("medical_order_status")
  patientDni          String             @map("patient_dni") @db.VarChar(16)
  patientName         String             @map("patient_name") @db.VarChar(128)
  patientLastname     String             @map("patient_lastname") @db.VarChar(128)
  locationCorporative String             @map("location_corporative_name") @db.VarChar(64)
  locationCompanyRuc  String             @map("location_company_ruc") @db.VarChar(13)
  locationCompanyName String             @map("location_company_name") @db.VarChar(64)
  locationBranchName  String             @map("location_branch_name") @db.VarChar(128)

  @@map("v_m_order_patients")
}

view OrderProcessModel {
  orderProcess String @unique @map("medical_order_process") @db.VarChar(64)

  @@map("v_m_order_process")
}

view OrderYearModel {
  orderYear Int @unique @map("medical_order_year") @db.Int

  @@map("v_m_order_years")
}

view OrderModel {
  orderId           String             @unique @map("medical_order_id") @db.Char(36)
  orderMail         Boolean            @map("medical_order_email") @db.TinyInt
  orderProcess      String             @map("medical_order_process") @db.VarChar(64)
  orderEmissionDate DateTime           @map("medical_order_emission_date") @db.Date
  orderStatus       MedicalOrderStatus @map("medical_order_status")
  orderYear         Int                @map("medical_order_year") @db.Int
  patientDni        String             @map("patient_dni") @db.VarChar(16)

  @@map("v_m_orders")
}

view DiseaseReportModel {
  diseaseReportId   String @unique @map("medical_disease_id") @db.Char(36)
  testId            String @map("medical_test_id") @db.Char(36)
  diseaseId         String @map("disease_id") @db.Char(36)
  diseaseName       String @map("disease_name") @db.VarChar(128)
  diseaseGroupId    String @map("disease_group_id") @db.Char(36)
  diseaseGroupName  String @map("disease_group_name") @db.VarChar(128)
  diseaseCommentary String @map("medical_disease_commentary") @db.Text

  @@map("v_m_disease_reports")
}

view ReportModel {
  testId              String   @unique @map("medical_test_id") @db.Char(36)
  reportContent       String?  @map("medical_report_content") @db.LongText
  reportFilepath      String?  @map("medical_report_filepath") @db.VarChar(512)
  reportEmissionDate  DateTime @map("medical_report_create_at")
  patientFullname     String   @map("patient_fullname") @db.VarChar(128)
  patientAge          Int      @map("patient_age") @db.Int
  patientDni          String   @map("patient_dni") @db.VarChar(16)
  locationCompanyName String   @map("location_company_name") @db.VarChar(64)
  examName            String   @map("exam_name") @db.VarChar(128)
  doctorDni           String   @map("doctor_dni") @db.VarChar(10)
  doctorFullname      String   @map("doctor_fullname") @db.VarChar(128)
  doctorSignature     String   @map("doctor_signature") @db.VarChar(512)

  @@map("v_m_reports")
}

view ResultFilepathModel {
  testId              String @unique @map("medical_test_id") @db.Char(36)
  orderYear           Int    @map("medical_order_year") @db.Int
  locationCorporative String @map("location_corporative") @db.VarChar(64)
  locationCompany     String @map("location_company") @db.VarChar(128)
  locationBranch      String @map("location_branch") @db.VarChar(128)
  patient             String @map("patient") @db.VarChar(128)
  order               String @map("medical_order") @db.VarChar(128)
  exam                String @map("exam") @db.VarChar(128)

  @@map("v_m_result_filepaths")
}

view TestReportModel {
  diseaseReportId     String        @unique @map("medical_disease_id") @db.Char(36)
  testId              String        @map("medical_test_id") @db.Char(36)
  orderYear           Int           @map("medical_order_year") @db.Int
  orderProcess        String        @map("medical_order_process") @db.VarChar(64)
  orderDate           DateTime      @map("medical_order_emission_date") @db.Date
  locationCorporative String        @map("location_corporative") @db.VarChar(64)
  locationCompany     String        @map("location_company") @db.VarChar(64)
  locationBranch      String        @map("location_branch_name") @db.VarChar(128)
  locationManagement  String?       @map("location_management") @db.VarChar(128)
  locationArea        String?       @map("location_area") @db.VarChar(128)
  locationJobPosition String?       @map("location_job_position") @db.VarChar(128)
  patientDni          String        @map("patient_dni") @db.VarChar(16)
  patientName         String        @map("patient_name") @db.VarChar(128)
  patientLastname     String        @map("patient_lastname") @db.VarChar(128)
  patientEmail        String        @map("patient_email") @db.VarChar(128)
  patientBirthday     DateTime      @map("patient_birthday") @db.Date
  patientAgeRange     String        @map("patient_age_range") @db.VarChar(128)
  patientAge          Int           @map("patient_age") @db.Int
  patientRole         String?       @map("patient_role") @db.VarChar(128)
  patientGender       PatientGender @map("patient_gender")
  examName            String        @map("exam_name") @db.VarChar(128)
  examSubtype         String        @map("exam_subtype") @db.VarChar(64)
  examType            String        @map("exam_type") @db.VarChar(64)
  diseaseName         String        @map("disease_name") @db.VarChar(128)
  diseaseGroup        String        @map("disease_group") @db.VarChar(128)
  diseaseCommentary   String        @map("medical_disease_commentary") @db.Text
  diseaseFindings     String        @map("medical_disease_findings") @db.Text

  @@map("v_m_test_reports")
}

view TestModel {
  testId           String  @unique @map("medical_test_id") @db.Char(36)
  testCheck        Boolean @map("test_checklist") @db.TinyInt
  resultHasFile    Boolean @map("result_has_file") @db.TinyInt
  reportHasContent Boolean @map("report_has_file") @db.TinyInt
  orderId          String  @map("medical_order_id") @db.Char(36)
  examName         String  @map("exam_name") @db.VarChar(128)
  examSubtype      String  @map("exam_subtype") @db.VarChar(64)
  examType         String  @map("exam_type") @db.VarChar(64)
  diseases         String? @map("medical_test_diseases") @db.VarChar(512)

  @@map("v_m_tests")
}

view TestInnerModel {
  testId      String  @unique @map("medical_test_id") @db.Char(36)
  orderId     String  @map("medical_order_id") @db.Char(36)
  examName    String  @map("exam_name") @db.VarChar(128)
  examSubtype String  @map("exam_subtype") @db.VarChar(64)
  examType    String  @map("exam_type") @db.VarChar(64)
  isActive    Boolean @map("is_active") @db.TinyInt

  @@map("v_m_tests_inner")
}

view TestFileResultModel {
  testId          String  @unique @map("medical_test_id") @db.Char(36)
  patientName     String  @map("patient_name") @db.VarChar(128)
  patientLastname String  @map("patient_lastname") @db.VarChar(128)
  patientDni      String  @map("patient_dni") @db.VarChar(16)
  examName        String  @map("exam_name") @db.VarChar(128)
  resultFilepath  String  @map("result_filepath") @db.VarChar(512)
  resultHasFile   Boolean @map("result_has_file") @db.TinyInt

  @@map("v_m_test_file_result")
}

// Disease Module
view DiseaseModel {
  diseaseId   String @unique @map("disease_id") @db.Char(36)
  diseaseName String @map("disease_name") @db.VarChar(128)
  groupId     String @map("disease_group_id") @db.Char(36)

  @@map("v_d_diseases")
}

view DiseaseGroupModel {
  groupId     String  @unique @map("disease_group_id") @db.Char(36)
  groupName   String  @map("disease_group_name") @db.VarChar(128)
  hasDiseases Boolean @map("group_has_diseases") @db.TinyInt

  @@map("v_d_disease_groups")
}

view DiseaseGroupOptionModel {
  diseaseValue String @unique @map("disease_value") @db.Char(36)
  diseaseLabel String @map("disease_label") @db.VarChar(128)
  groupValue   String @unique @map("group_value") @db.Char(36)
  groupLabel   String @unique @map("group_label") @db.VarChar(128)

  @@map("v_d_disease_group_options")
}

// Laboratory Module
view ExamModel {
  examId    String @unique @map("exam_id") @db.Char(36)
  examName  String @map("exam_name") @db.VarChar(128)
  subtypeId String @map("exam_subtype_id") @db.Char(36)

  @@map("v_lab_exams")
}

view ExamSubtypeModel {
  subtypeId   String  @unique @map("exam_subtype_id") @db.Char(36)
  subtypeName String  @map("exam_subtype_name") @db.VarChar(128)
  hasExams    Boolean @map("subtype_has_exams") @db.TinyInt
  typeId      String  @map("exam_type_id") @db.Char(36)

  @@map("v_lab_exam_subtypes")
}

view ExamTypeModel {
  typeId      String  @unique @map("exam_type_id") @db.Char(36)
  typeName    String  @map("exam_type_name") @db.VarChar(128)
  hasSubtypes Boolean @map("test_has_subtypes") @db.TinyInt

  @@map("v_lab_exam_types")
}

view ExamSubtypeOptionModel {
  examValue    String @unique @map("exam_value") @db.Char(36)
  examLabel    String @map("exam_label") @db.VarChar(128)
  subtypeValue String @map("subtype_value") @db.Char(36)
  subtypeLabel String @map("subtype_label") @db.VarChar(128)

  @@map("v_lab_exam_subtype_options")
}

view ExamTypeOptionModel {
  subtypeValue String @unique @map("subtype_value") @db.Char(36)
  subtypeLabel String @map("subtype_label") @db.VarChar(128)
  typeValue    String @map("type_value") @db.Char(36)
  typeLabel    String @map("type_label") @db.VarChar(128)

  @@map("v_lab_exam_type_options")
}

// Location Module
view AreaModel {
  areaId   String @unique @map("area_id") @db.Char(36)
  areaName String @map("area_name") @db.VarChar(128)

  @@map("v_lo_areas")
}

view AreaOptionModel {
  areaValue String @unique @map("area_value") @db.Char(36)
  areaLabel String @map("area_label") @db.VarChar(128)

  @@map("v_lo_area_options")
}

view JobPositionModel {
  jobPositionId   String @unique @map("job_position_id") @db.Char(36)
  jobPositionName String @map("job_position_name") @db.VarChar(128)

  @@map("v_lo_job_positions")
}

view JobPositionOptionModel {
  jobPositionValue String @unique @map("job_position_value") @db.Char(36)
  jobPositionLabel String @map("job_position_label") @db.VarChar(128)

  @@map("v_lo_job_position_options")
}

view ManagementModel {
  managementId   String @unique @map("management_id") @db.Char(36)
  managementName String @map("management_name") @db.VarChar(128)

  @@map("v_lo_managements")
}

view ManagementOptionModel {
  managementValue String @unique @map("management_value") @db.Char(36)
  managementLabel String @map("management_label") @db.VarChar(128)

  @@map("v_lo_management_options")
}

view BranchModel {
  branchId   String @unique @map("branch_id") @db.Char(36)
  branchName String @map("branch_name") @db.VarChar(128)
  companyId  String @map("company_id") @db.Char(36)
  cityName   String @map("city_name") @db.VarChar(128)

  @@map("v_lo_branches")
}

view CompanyModel {
  companyId      String  @unique @map("company_id") @db.Char(36)
  companyRuc     String  @map("company_ruc") @db.VarChar(13)
  companyName    String  @map("company_name") @db.VarChar(64)
  companyAddress String  @map("company_address") @db.VarChar(128)
  companyPhone   String  @map("company_phone") @db.VarChar(16)
  hasBranches    Boolean @map("company_has_branches") @db.TinyInt
  corporativeId  String  @map("corporative_id") @db.Char(36)

  @@map("v_lo_companies")
}

view CompanyOptionModel {
  branchValue  String @unique @map("branch_value") @db.Char(36)
  branchLabel  String @map("branch_label") @db.VarChar(128)
  companyValue String @map("company_value") @db.Char(36)
  companyLabel String @map("company_label") @db.VarChar(128)

  @@map("v_lab_company_options")
}

view CorporativeModel {
  corporativeId   String  @unique @map("corporative_id") @db.Char(36)
  corporativeName String  @map("corporative_name") @db.VarChar(64)
  hasCompanies    Boolean @map("company_has_companies") @db.TinyInt

  @@map("v_lo_corporative_groups")
}

view CorporativeOptionModel {
  companyValue     String @unique @map("company_value") @db.Char(36)
  companyLabel     String @map("company_label") @db.Text
  corporativeValue String @map("corporative_value") @db.Char(36)
  corporativeLabel String @map("corporative_label") @db.VarChar(128)

  @@map("v_lab_corporative_options")
}

// Profile Module
view DoctorModel {
  userId          String  @unique @map("user_id") @db.Char(36)
  userDni         String  @map("user_dni") @db.VarChar(16)
  userEmail       String  @map("user_email") @db.VarChar(128)
  userName        String  @map("user_name") @db.VarChar(128)
  userLastname    String  @map("user_lastname") @db.VarChar(128)
  userHasAuth     Boolean @map("user_has_auth") @db.TinyInt
  doctorSignature String  @map("doctor_signature") @db.VarChar(512)
  doctorHasFile   Boolean @map("doctor_has_file") @db.TinyInt

  @@map("v_u_doctors")
}

view DoctorOptionModel {
  doctorValue String @unique @map("doctor_value") @db.Char(36)
  doctorLabel String @map("doctor_label") @db.VarChar(128)

  @@map("v_u_doctor_options")
}

view UserAttributeModel {
  attributeId    String @unique @map("user_attribute_id") @db.Char(36)
  attributeName  String @map("user_attribute_name") @db.VarChar(64)
  attributeValue String @map("user_attribute_value") @db.VarChar(512)
  userId         String @map("user_id") @db.Char(36)

  @@map("v_u_attributes")
}

view UserModel {
  userId       String @id @map("user_id") @db.Char(36)
  userDni      String @map("user_dni") @db.VarChar(16)
  userEmail    String @map("user_email") @db.VarChar(128)
  userName     String @map("user_name") @db.VarChar(128)
  userLastname String @map("user_lastname") @db.VarChar(128)
  authId       String @map("auth_id") @db.Char(36)

  @@map("v_u_users")
}
